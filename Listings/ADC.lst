C51 COMPILER V9.59.0.0   ADC                                                               05/10/2019 12:23:28 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\ADC.obj
COMPILER INVOKED BY: f:\Keil_v5\C51\BIN\C51.EXE user\ADC.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -ADC.lst) OBJECT(.\Objects\ADC.obj)

line level    source

   1          #include <STC15.h>
   2          #include "ADC.h"
   3          #include "delay.h"
   4          
   5          #define ADC_POWER (1<<7)
   6          #define ADC_SPEED 0x40 // SPEED1 SPEED0 10 180个周期转换一次高速模式
   7          #define ADC_FLAG  (1<<4)// D%转换结束标志位 转换结束自动置1,需要手动清零
   8          #define ADC_START (1<<3) // D4转换开始位
   9          
  10          void ADC_Init(void)
  11          {
  12   1              P1ASF = 0xff;  // 8路为ADC模拟功能 0为普通io口功能
  13   1              ADC_RES = 0;
  14   1              ADC_RESL= 0;
  15   1              ADC_CONTR = ADC_POWER | ADC_SPEED ; // 0xc0 开启ADC电源,设置转换速度
  16   1              P1M0 = 0xff;
  17   1              P1M1 = 0xff; // 设置AD输入口的 io口为高阻态模式
  18   1              //CLK_DIV |= 0x20;  //设置RES与RESL数据的存储方式在PCON2寄存器中D5位
  19   1              DelayMS(1000); // 上电延时
  20   1      }
  21          
  22          u16 getADC10bitResult(char channel) //编写自定义ADC通道函数
  23          {
  24   1              u16 ADC_Value = 0; // 存放10位ADC转换结果
  25   1              // ADC_CONTR = (ADC_CONTR & 0xe0) | ADC_START | channel; 设置任意io口为AD通道
  26   1              ADC_CONTR = ADC_POWER | ADC_SPEED | ADC_START| channel; // 开始转换 
  27   1              DelayMS(1);
  28   1              while (!(ADC_CONTR & ADC_FLAG)); //查询转换结果,当转换完成时,清除标志并读取结果
  29   1              ADC_CONTR &= ~ADC_FLAG; //清除转换标志位
  30   1              //10位AD的结果高2位放在RES中,低8位 放在RESL中
  31   1              if(CLK_DIV&(1<<5)) //CLK_DIV 第5位的ADRJ决定RES与RESL的存放顺序
  32   1              {
  33   2                      ADC_Value = (unsigned int)(ADC_RES&3);//3等同于0000 0011  保留低两位其余清零
  34   2                      ADC_Value =(ADC_Value <<8)|ADC_RESL;
  35   2              }
  36   1              else
  37   1              {
  38   2                      ADC_Value = (unsigned int)ADC_RES;
  39   2                      ADC_Value = (ADC_Value<<2)|(ADC_RESL&3);
  40   2              }
  41   1              
  42   1              return ADC_Value;
  43   1      }
  44          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    110    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.59.0.0   ADC                                                               05/10/2019 12:23:28 PAGE 2   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
